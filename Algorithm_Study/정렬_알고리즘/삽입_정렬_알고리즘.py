# 삽입 정렬 알고리즘

'''
- 정렬된 집합에 새로운 원소의 적절한 위치를 찾아 삽입하는 정렬 방식

- 자료 배열의 모든 요소를 앞에서부터 차례대로 이미 정렬된 배열 부분과 비교하여, 자신의 위치를 찾아 삽입함으로써 정렬을 완성하는 정렬 방법

- 배열이 작을 경우 효율적 

- 공간 복잡도 : O(n)

- 시간 복잡도 : O(n^2)
'''

num = [3,2,6,1,124,6124,23,5,78,24,6,50,9]

def insertion_sort(num):
    n = len(num)
    for i in range(1, n): # 두 번째 요소 부터 시작
        key = num[i] # 비교할 기준값
        j = i - 1 # 현재 요소 바로 왼쪽에 있는 요소에서 시작하기 위해 
                  # i - 1에서 시작하여 현재 요소의 왼쪽에 있는 하위 배열에 대해서만 반복하므로 
                  # 비교 횟수가 줄고 알고리즘의 효율성이 향상
        while j >= 0 and key < num[j]:
            num[j + 1] = num[j]
            j -= 1 # 인덱스를 왼쪽으로 한 위치로 이동, 즉, 다음 반복을 위한 루프가 준비
        num[j + 1] = key # 요소가 한 위치 오른쪽으로 이동
    return num

print(insertion_sort(num))